# Copyright (C) 2017-2018 LAAS-CNRS
#
# Author: Olivier Stasse
#
cmake_minimum_required(VERSION 2.8.3)

set(CXX_DISABLE_WERROR True)

set(WARNING_CXX_FLAGS "${WARNING_CXX_FLAGS} -Werror=format-security")

SET(PROJECT_ORG stack-of-tasks)
set(PROJECT_DESCRIPTION "roscontrol_sot")
set(PROJECT_NAME roscontrol_sot)
set(PROJECT_URL "https://github.com/stack-of-tasks/roscontrol_sot")

# Export CMake Target
SET(PROJECT_USE_CMAKE_EXPORT TRUE)

# Disable failing compilation when a compilation error appears
set(CXX_DISABLE_WERROR False)

include(cmake/base.cmake)

# Specify the project.
cmake_policy(SET CMP0048 NEW)
PROJECT(${PROJECT_NAME}
  LANGUAGES
  CXX
  VERSION
  ${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}.${PROJECT_VERSION_PATCH}
  )

include(cmake/ros.cmake)
include(cmake/GNUInstallDirs.cmake)
include(cmake/python.cmake)

find_package(PkgConfig REQUIRED)

add_required_dependency(bullet)
add_required_dependency("urdfdom")

SET(CATKIN_REQUIRED_COMPONENTS
  temperature_sensor_controller  
  pal_hardware_interfaces
  controller_interface
  controller_manager
  pal_common_msgs
  roscpp
  std_msgs
  dynamic_graph_bridge
  control_msgs
  sensor_msgs
  realtime_tools  )

SET(CATKIN_DEPENDS_LIBRARIES ros_bridge sot_loader rcsot_controller)

SET(CATKIN_REQUIRED_COMPONENTS ${CATKIN_REQUIRED_COMPONENTS} rospy)
SET(CATKIN_DEPENDS_LIBRARIES ${CATKIN_DEPENDS_LIBRARIES} ros_interpreter)

## Find catkin macros and libraries
## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)
## is used, also find other catkin packages
find_package(catkin REQUIRED COMPONENTS
  ${CATKIN_REQUIRED_COMPONENTS}
)

## LAAS cmake submodule part
set(PROJECT_DESCRIPTION "Integration of the Stack of Tasks in roscontrol")
set(PROJECT_NAME roscontrol_sot)
set(PROJECT_URL "https://github.com/stack-of-tasks/roscontrol_sot")


include_directories(include tests ${catkin_INCLUDE_DIRS} ${bullet_INCLUDE_DIRS})

link_directories(${bullet_LIBRARY_DIRS})

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++0x")

set(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/bin)
set(LIBRARY_OUTPUT_PATH ${PROJECT_BINARY_DIR}/lib)
set(CMAKE_INSTALL_RPATH "${LIBRARY_OUTPUT_PATH}")
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${LIBRARY_OUTPUT_PATH}")

# Add dependency through jrl-cmakemodules to compile
# this code without catkin_make
#add_project_dependency(dynamic_graph_bridge REQUIRED)
add_project_dependency(dynamic-graph REQUIRED )
add_project_dependency(dynamic-graph-python REQUIRED )
add_project_dependency(sot-core REQUIRED )
add_required_dependency("pinocchio" REQUIRED)

# This is necessary so that the pc file generated by catking is similar
# to the on done directly by jrl-cmake-modules
catkin_package(CATKIN_DEPENDS
  temperature_sensor_controller
  pal_hardware_interfaces
  controller_interface controller_manager  
  roscpp
  realtime_tools
  message_runtime
  dynamic_graph_bridge
LIBRARIES ${CATKIN_DEPENDS_LIBRARIES} )

# Detect the controller interface version to switch code
if(controller_interface_FOUND)
  if (${controller_interface_VERSION} VERSION_GREATER "0.2.5")
    add_definitions(-DCONTROLLER_INTERFACE_KINETIC)
  endif(${controller_interface_VERSION} VERSION_GREATER "0.2.5")
endif(controller_interface_FOUND)

# Detect if temperature sensor controller package is found
# if yes then it is a PARL Robotics Forked code.
if(temperature_sensor_controller_FOUND)
  add_definitions(-DTEMPERATURE_SENSOR_CONTROLLER)
endif(temperature_sensor_controller_FOUND)

LIST(APPEND LOGGING_WATCHED_VARIABLES
  TEMPERATURE_SENSOR_CONTROLLER_FOUND
  CONTROLLER_INTERFACE_FOUND
  CONTROLLER_INTERFACE_VERSION )
  

###########
## Build ##
###########

## Specify additional locations of header files
## Your package locations should be listed before other locations
# include_directories(include)
include_directories(
  ${catkin_INCLUDE_DIRS}
  )

## Declare a C++ library
add_library(rcsot_controller
src/roscontrol-sot-controller.cpp
src/log.cpp
)

pkg_config_use_dependency(rcsot_controller pinocchio NO_INCLUDE_SYSTEM)
## Add cmake target dependencies of the executable
## same as for the library above
# add_dependencies(roscontrol_sot_node ${${PROJECT_NAME}_EXPORTED_TARGETS}
#     ${catkin_EXPORTED_TARGETS})

## Specify libraries to link a library or executable target against
target_link_libraries(rcsot_controller
  ${catkin_LIBRARIES}
  ${bullet_LIBRARIES}
  )

#target_link_libraries(rcsot_controller urdfdom optional
#  NO_INCLUDE_SYSTEM)
target_link_libraries(rcsot_controller dynamic-graph::dynamic-graph)

## Mark executables and/or libraries for installation
install(TARGETS rcsot_controller
  EXPORT ${TARGETS_EXPORT_NAME}    
  DESTINATION lib )

ADD_EXECUTABLE(roscontrol-sot-parse-log
  src/roscontrol-sot-parse-log.cc)
install(TARGETS roscontrol-sot-parse-log
  EXPORT ${TARGETS_EXPORT_NAME}    
  DESTINATION bin )

foreach(dir config launch)
  install(DIRECTORY ${dir}
    DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}
  )
endforeach()


#ADD_SUBDIRECTORY(tests)

get_cmake_property(_variableNames VARIABLES)
list (SORT _variableNames)
foreach (_variableName ${_variableNames})
  LIST(APPEND LOGGING_WATCHED_VARIABLES
    ${_variableName}
    )
endforeach()

SETUP_PROJECT_FINALIZE()

get_cmake_property(_variableNames VARIABLES)
list (SORT _variableNames)
foreach (_variableName ${_variableNames})
    message(STATUS "${_variableName}=${${_variableName}}")
endforeach()
